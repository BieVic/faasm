name: Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  code:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-20.04
    steps:
      - name: "Check out code"
        uses: actions/checkout@v2 
        with:
          path: code
          
  formatting:
    if: github.event.pull_request.draft == false
    needs: code
    runs-on: ubuntu-20.04
    container:
      image: faasm/cli:0.5.13
      volumes:
        - ${GITHUB_WORKSPACE}/code:/usr/local/code/faasm
    defaults:
      run:
        working-directory: /usr/local/code/faasm
    steps:
      - name: "Build the targets to update compile commands and dependencies"
        run: inv -r faasmcli/faasmcli dev.tools --build Release
      # --- Formatting checks ---
      - name: "Ensure all Python deps up-to-date"
        run: pip3 install -r faasmcli/requirements.txt
      - name: "Python formatting check"
        run: ./bin/check_python.sh
      - name: "Run C/C++ formatting"
        run: ./bin/run_clang_format.sh
      - name: "Check C/C++ formatting changes"
        run: git diff --exit-code
      - name: "Run C/C++ linter"
        run: ./bin/run_clang_tidy.sh

  cpp-funcs:
    if: github.event.pull_request.draft == false
    needs: code
    runs-on: ubuntu-20.04
    container:
      image: faasm/cpp-sysroot:0.0.22
      volumes:
        - ${GITHUB_WORKSPACE}/code/clients/cpp:/code/cpp
        - ${GITHUB_WORKSPACE}/container/wasm:/usr/local/faasm/wasm
        - ${GITHUB_WORKSPACE}/container/fake:/usr/local/faasm/runtime_root/lib/fake
    defaults:
      run:
        working-directory: /code/cpp
    steps:
      - name: "Build C++ functions"
        run: inv func.local
      - name: "Build libfake"
        run: inv libfake

  py-funcs:
    if: github.event.pull_request.draft == false
    needs: code
    runs-on: ubuntu-20.04
    container:
      image: faasm/cpython:0.0.11
      volumes:
        - ${GITHUB_WORKSPACE}/code/clients/python:/code/python
        - ${GITHUB_WORKSPACE}/container/wasm:/usr/local/faasm/wasm
        - ${GITHUB_WORKSPACE}/container/shared:/usr/local/faasm/shared_store
    defaults:
      run:
        working-directory: /code/python
    steps:
      - name: "Build CPython function"
        run: inv func
      - name: "Build libfake"
        run: inv func.uploadpy --local

  build:
    if: github.event.pull_request.draft == false
    needs: [cpp-funcs, py-funcs]
    runs-on: ubuntu-20.04
    env:
      CGROUP_MODE: off
      HOST_TYPE: ci
      LOG_LEVEL: info
      MAX_FAASLETS: 5
      NETNS_MODE: off
      REDIS_QUEUE_HOST: redis
      REDIS_STATE_HOST: redis
    container:
      image: faasm/cli:0.5.13
      volumes:
        - ${GITHUB_WORKSPACE}/code:/usr/local/code/faasm
        - ${GITHUB_WORKSPACE}/container/wasm:/usr/local/faasm/wasm
        - ${GITHUB_WORKSPACE}/container/shared:/usr/local/faasm/shared_store
        - ${GITHUB_WORKSPACE}/container/fake:/usr/local/faasm/runtime_root/lib/fake
    defaults:
      run:
        working-directory: /usr/local/code/faasm
    services:
      redis:
        image: faasm/redis:0.5.13
        ports:
          - 6379:6379
    steps:
      # --- CPU information ---
      - name: "CPU info"
        run: cat /proc/cpuinfo
      - name: "Get CPU model name"
        run: echo "CPU_MODEL=$(./bin/print_cpu.sh)" >> $GITHUB_ENV
      - name: "Print CPU model"
        run: echo "${{ env.CPU_MODEL}}"
      # --- Cache ---
      - name: "Configure machine code cache"
        uses: actions/cache@v2
        with:
          path: /usr/local/faasm/object
          key: ${{ env.CPU_MODEL }}-machine-code
      # --- Code build ---
      - name: "Build dev tools"
        run: inv -r faasmcli/faasmcli dev.tools --build Release
      # --- Environment set-up ---
      - name: "Run codegen"
        run: inv -r faasmcli/faasmcli codegen.local
      - name: "Run python codegen"
        run: inv -r faasmcli/faasmcli python.codegen
      - name: "Clear existing pyc files"
        run: inv -r faasmcli/faasmcli python.clear-runtime-pyc
      # --- Test run ---
      - name: "Run the tests"
        run: /build/faasm/bin/tests
